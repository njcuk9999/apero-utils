name: 'GL 406'
rdbfile: '/Users/eartigau/all_rdbs/nirps/lbl_GL406_PROXIMA.rdb'
bin_per_epoch: True

# what type of activity correction do we want?
# type and option
# type: 'RV' and 'QuasiPer' -> a GP on the RV itself with a quasi-periodic kernel
#                              -> this could be modfied to include another kernel
#       'Detrend' and 'DTEMP' -> a linear detrending of the RVs with a temperature proxy
#       'Detrend' and 'd2v' -> a linear detrending of the RVs with a second derivative proxy
#       'Detrend' and 'DTEMP_deriv' -> a linear detrending of the RVs with a temperature change proxy
#       'Detrend' and 'd2v_deriv' -> a linear detrending of the RVs with a second derivative temperature change
#       'train' and 'DTEMP' -> train GP on the DTEMP and apply to RV GP as a kernel
#       'train' and 'd2v' -> train GP on the d2v and apply to RV GP as a kernel
#       'BERV' and 'SqExp' -> a GP on the BERV without a periodic term (only square expo)
#       'None' and 'None' -> no activity correction, only keplerian fit
activity_correction:
    type: 'RV' # Detrend, RV, BERV, Train, None
    quantity: 'DTEMP' # DTEMP, d2v, vrad
    derivative: True # For Detrend ONLY, is it the value or its time derivative?
    gp_params: # Parameters for the GP
        kernel: 'QuasiPer'
        # expressed in units of vrad, adjusted for other quantities
        amp: [2.0, 'Jeffreys', [0.1,20], True]
        per: [2.25147, 'Gaussian', 0.1, True] # period
        perlength: [3.0, 'Jeffreys', [0.3,3.0], False] # length of the periodic kernel
        # must be longer than the longest period in the model
        explength: [300.0, 'Gaussian', 30, False] # length of the exponential kernel

keplerian_fit:
    dvdt: False
    curv: False
    gamma: [0.0, True]
    jit: [0.01, True]
    valid_rv_range: [-10,10]
    timestep: 0.3 # days, for plotting

planet_params:
    # https://radvel.readthedocs.io/en/latest/basis.html?highlight=basis
    basis: 'per tc secosw sesinw k'
    planet1:
        per: [20, 'Gaussian',1, True ]
        tc: [ 2459308.00435, 'Gaussian', 10.0, True ]
        secosw: [ 0.00000, 'Uniform', [ -1,1 ], False ] # sqrt(e)*cos(w)
        sesinw: [ 0.00000, 'Uniform', [ -1,1 ], False ] # sqrt(e)*sin(w)
        k: [ 3.5, 'Gaussian', 0.5, True ]
    #planet2:
    #    per: [10, 'Jeffreys',[6,12], True]
    #    tc: [2459308.00435, 'Gaussian', 10.0, True]
    #    secosw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*cos(w)
    #    sesinw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*sin(w)
    #    k: [0.5, 'Jeffreys', [0.01,2.0], True]


mcmc_params:
    thin: 1
    burnin: 1000
    nwalkers: 20
    nrun: 400
    savename: 'rawchains.h5'
