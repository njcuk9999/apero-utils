name: 'AU Mic'
rdbfile: '/Users/eartigau/teff_lbl/teff_gp/lbl_AUMIC_AUMIC.rdb'
output_dir: '/Users/eartigau/all_rdbs/nirps/outputs/'
bin_per_epoch: True

# what type of activity correction do we want?
# type and option
# type: 'RV' and 'QuasiPer' -> a GP on the RV itself with a quasi-periodic kernel
#                              -> this could be modfied to include another kernel
#       'Detrend' and 'DTEMP' -> a linear detrending of the RVs with a temperature proxy
#       'Detrend' and 'd2v' -> a linear detrending of the RVs with a second derivative proxy
#       'Detrend' and 'DTEMP_deriv' -> a linear detrending of the RVs with a temperature change proxy
#       'Detrend' and 'd2v_deriv' -> a linear detrending of the RVs with a second derivative temperature change
#       'train' and 'DTEMP' -> train GP on the DTEMP and apply to RV GP as a kernel
#       'train' and 'd2v' -> train GP on the d2v and apply to RV GP as a kernel
#       'BERV' and 'SqExp' -> a GP on the BERV without a periodic term (only square expo)
#       'None' and 'None' -> no activity correction, only keplerian fit
activity_correction:
    type: 'Train' # Detrend, RV, BERV, Train, None
    quantity: 'DTEMP3000' # DTEMP, d2v, vrad
    derivative: True # For Detrend ONLY, is it the value or its time derivative?
    gp_params: # Parameters for the GP
        kernel: 'QuasiPer'
        # expressed in units of vrad, adjusted for other quantities
        amp: [5.0, 'Jeffreys', [0.01,100], True]
        per: [4.86, 'Uniform', [4.5,5.0], True] # period
        perlength: [1, 'Jeffreys', [0.01,100.0], True] # length of the periodic kernel
        # must be longer than the longest period in the model
        explength: [30.0, 'Jeffreys', [10,1000], True] # length of the exponential kernel

table_manipulation:
    rjd_min: 0
    rjd_max: 1000000

plot_time_range:
    domain1: [-1,-1] # -1 means use the min and max of the data
    domain2: [2458970, 2459163] # actual domain
    plot_residuals: False

keplerian_fit:
    dvdt: False
    curv: False
    gamma: [0.0, True]
    jit: [1.0, False]
    valid_rv_range: [-1000,1000]
    timestep: 0.3 # days, for plotting

planet_params:
    # https://radvel.readthedocs.io/en/latest/basis.html?highlight=basis
    basis: 'per tc secosw sesinw k'
    planet1:
        per: [8.4631427, 'Gaussian', 0.05, False]
        tc: [2458330.38416, 'Gaussian', 3.0, False]
        secosw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*cos(w)
        sesinw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*sin(w)
        k: [1.2, 'Jeffreys', [0.01,10.0], True]
    planet2:
        per: [18.85882, 'Gaussian', 0.05, False]
        tc: [2459454.8973, 'Gaussian', 3.0, False]
        secosw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*cos(w)
        sesinw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*sin(w)
        k: [1.2, 'Jeffreys', [0.01,10.0], True]
    planet3:
        per: [33.39, 'Gaussian', 0.1, False]
        tc: [2459117.1, 'Gaussian', 0.9, False]
        secosw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*cos(w)
        sesinw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*sin(w)
        k: [1.2, 'Jeffreys', [0.01,10.0], True]
    planet4:
        per: [12.73812, 'Gaussian', 0.05, False]
        tc: [2458333.3211, 'Gaussian', 3.0, False]
        secosw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*cos(w)
        sesinw: [0.00000, 'Uniform', [-1,1], False] # sqrt(e)*sin(w)
        k: [1.2, 'Jeffreys', [0.01,10.0], True]
mcmc_params:
    thin: 1
    burnin: 40
    nwalkers: 50
    nsteps: 2000
    nrun: 100
    savename: 'rawchains.h5'
